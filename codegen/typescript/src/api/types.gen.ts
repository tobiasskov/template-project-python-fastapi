// This file is auto-generated by @hey-api/openapi-ts

/**
 * Schema for creating a car (V1).
 */
export type CarCreateV1 = {
    /**
     * Make of the vehicle
     */
    make: string;
    /**
     * Model of the vehicle
     */
    model: string;
    /**
     * Year of manufacture
     */
    year: number;
    /**
     * Color of the vehicle
     */
    color: string;
    /**
     * Vehicle Identification Number (VIN)
     */
    vin: string;
    /**
     * Current mileage of the vehicle
     */
    mileage: number;
    /**
     * Date of last service
     */
    last_service_date?: string | null;
    /**
     * Number of doors
     */
    doors: number;
    /**
     * Trunk capacity in cubic feet
     */
    trunk_capacity: number;
    /**
     * Type of fuel used
     */
    fuel_type: FuelType;
    /**
     * Type of transmission
     */
    transmission: TransmissionType;
};

/**
 * Schema for creating a car (V2).
 */
export type CarCreateV2 = {
    /**
     * Make of the vehicle
     */
    make: string;
    /**
     * Model of the vehicle
     */
    model: string;
    /**
     * Year of manufacture
     */
    year: number;
    /**
     * Color of the vehicle
     */
    color: string;
    /**
     * Vehicle Identification Number (VIN)
     */
    vin: string;
    /**
     * Vehicle registration number
     */
    registration_number: string;
    /**
     * Insurance expiry date
     */
    insurance_expiry?: string | null;
    /**
     * Whether the vehicle is available for use
     */
    is_available?: boolean;
    /**
     * Number of doors
     */
    doors: number;
    /**
     * Trunk capacity in cubic feet
     */
    trunk_capacity: number;
    /**
     * Type of fuel used
     */
    fuel_type: FuelType;
    /**
     * Type of transmission
     */
    transmission: TransmissionType;
    /**
     * Whether the car has a sunroof
     */
    sunroof?: boolean;
    /**
     * Whether the car has parking sensors
     */
    parking_sensors?: boolean;
};

/**
 * Schema for car responses, including ID (V1).
 */
export type CarResponseV1 = {
    /**
     * Make of the vehicle
     */
    make: string;
    /**
     * Model of the vehicle
     */
    model: string;
    /**
     * Year of manufacture
     */
    year: number;
    /**
     * Color of the vehicle
     */
    color: string;
    /**
     * Vehicle Identification Number (VIN)
     */
    vin: string;
    /**
     * Current mileage of the vehicle
     */
    mileage: number;
    /**
     * Date of last service
     */
    last_service_date?: string | null;
    /**
     * Unique identifier for the vehicle
     */
    id: string;
    /**
     * Number of doors
     */
    doors: number;
    /**
     * Trunk capacity in cubic feet
     */
    trunk_capacity: number;
    /**
     * Type of fuel used
     */
    fuel_type: FuelType;
    /**
     * Type of transmission
     */
    transmission: TransmissionType;
};

/**
 * Schema for car responses, including ID (V2).
 */
export type CarResponseV2 = {
    /**
     * Make of the vehicle
     */
    make: string;
    /**
     * Model of the vehicle
     */
    model: string;
    /**
     * Year of manufacture
     */
    year: number;
    /**
     * Color of the vehicle
     */
    color: string;
    /**
     * Vehicle Identification Number (VIN)
     */
    vin: string;
    /**
     * Vehicle registration number
     */
    registration_number: string;
    /**
     * Insurance expiry date
     */
    insurance_expiry?: string | null;
    /**
     * Whether the vehicle is available for use
     */
    is_available?: boolean;
    /**
     * Unique identifier for the vehicle
     */
    id: string;
    /**
     * Current mileage of the vehicle
     */
    mileage: number;
    /**
     * Date of last service
     */
    last_service_date?: string | null;
    /**
     * Number of doors
     */
    doors: number;
    /**
     * Trunk capacity in cubic feet
     */
    trunk_capacity: number;
    /**
     * Type of fuel used
     */
    fuel_type: FuelType;
    /**
     * Type of transmission
     */
    transmission: TransmissionType;
    /**
     * Whether the car has a sunroof
     */
    sunroof?: boolean;
    /**
     * Whether the car has parking sensors
     */
    parking_sensors?: boolean;
};

export type FuelType = 'gasoline' | 'diesel' | 'electric' | 'hybrid';

export type HttpValidationError = {
    detail?: Array<ValidationError>;
};

export type TransmissionType = 'manual' | 'automatic' | 'cvt';

/**
 * Schema for creating a truck (V1).
 */
export type TruckCreateV1 = {
    /**
     * Make of the vehicle
     */
    make: string;
    /**
     * Model of the vehicle
     */
    model: string;
    /**
     * Year of manufacture
     */
    year: number;
    /**
     * Color of the vehicle
     */
    color: string;
    /**
     * Vehicle Identification Number (VIN)
     */
    vin: string;
    /**
     * Current mileage of the vehicle
     */
    mileage: number;
    /**
     * Date of last service
     */
    last_service_date?: string | null;
    /**
     * Length of the truck bed in feet
     */
    bed_length: number;
    /**
     * Towing capacity in pounds
     */
    towing_capacity: number;
    /**
     * Maximum payload capacity in pounds
     */
    payload_capacity: number;
    /**
     * Engine size in liters
     */
    engine_size: number;
};

/**
 * Schema for creating a truck (V2).
 */
export type TruckCreateV2 = {
    /**
     * Make of the vehicle
     */
    make: string;
    /**
     * Model of the vehicle
     */
    model: string;
    /**
     * Year of manufacture
     */
    year: number;
    /**
     * Color of the vehicle
     */
    color: string;
    /**
     * Vehicle Identification Number (VIN)
     */
    vin: string;
    /**
     * Vehicle registration number
     */
    registration_number: string;
    /**
     * Insurance expiry date
     */
    insurance_expiry?: string | null;
    /**
     * Whether the vehicle is available for use
     */
    is_available?: boolean;
    /**
     * Length of the truck bed in feet
     */
    bed_length: number;
    /**
     * Towing capacity in pounds
     */
    towing_capacity: number;
    /**
     * Maximum payload capacity in pounds
     */
    payload_capacity: number;
    /**
     * Engine size in liters
     */
    engine_size: number;
    /**
     * Whether the truck has four-wheel drive
     */
    four_wheel_drive?: boolean;
    /**
     * Whether the truck has a bed liner
     */
    bed_liner?: boolean;
};

/**
 * Schema for truck responses, including ID (V1).
 */
export type TruckResponseV1 = {
    /**
     * Make of the vehicle
     */
    make: string;
    /**
     * Model of the vehicle
     */
    model: string;
    /**
     * Year of manufacture
     */
    year: number;
    /**
     * Color of the vehicle
     */
    color: string;
    /**
     * Vehicle Identification Number (VIN)
     */
    vin: string;
    /**
     * Current mileage of the vehicle
     */
    mileage: number;
    /**
     * Date of last service
     */
    last_service_date?: string | null;
    /**
     * Unique identifier for the vehicle
     */
    id: string;
    /**
     * Length of the truck bed in feet
     */
    bed_length: number;
    /**
     * Towing capacity in pounds
     */
    towing_capacity: number;
    /**
     * Maximum payload capacity in pounds
     */
    payload_capacity: number;
    /**
     * Engine size in liters
     */
    engine_size: number;
};

/**
 * Schema for truck responses, including ID (V2).
 */
export type TruckResponseV2 = {
    /**
     * Make of the vehicle
     */
    make: string;
    /**
     * Model of the vehicle
     */
    model: string;
    /**
     * Year of manufacture
     */
    year: number;
    /**
     * Color of the vehicle
     */
    color: string;
    /**
     * Vehicle Identification Number (VIN)
     */
    vin: string;
    /**
     * Vehicle registration number
     */
    registration_number: string;
    /**
     * Insurance expiry date
     */
    insurance_expiry?: string | null;
    /**
     * Whether the vehicle is available for use
     */
    is_available?: boolean;
    /**
     * Unique identifier for the vehicle
     */
    id: string;
    /**
     * Current mileage of the vehicle
     */
    mileage: number;
    /**
     * Date of last service
     */
    last_service_date?: string | null;
    /**
     * Length of the truck bed in feet
     */
    bed_length: number;
    /**
     * Towing capacity in pounds
     */
    towing_capacity: number;
    /**
     * Maximum payload capacity in pounds
     */
    payload_capacity: number;
    /**
     * Engine size in liters
     */
    engine_size: number;
    /**
     * Whether the truck has four-wheel drive
     */
    four_wheel_drive?: boolean;
    /**
     * Whether the truck has a bed liner
     */
    bed_liner?: boolean;
};

export type ValidationError = {
    loc: Array<string | number>;
    msg: string;
    type: string;
};

/**
 * Base response schema including ID (V1).
 */
export type VehicleResponseV1 = {
    /**
     * Make of the vehicle
     */
    make: string;
    /**
     * Model of the vehicle
     */
    model: string;
    /**
     * Year of manufacture
     */
    year: number;
    /**
     * Color of the vehicle
     */
    color: string;
    /**
     * Vehicle Identification Number (VIN)
     */
    vin: string;
    /**
     * Current mileage of the vehicle
     */
    mileage: number;
    /**
     * Date of last service
     */
    last_service_date?: string | null;
    /**
     * Unique identifier for the vehicle
     */
    id: string;
};

/**
 * Base response schema including ID (V2).
 */
export type VehicleResponseV2 = {
    /**
     * Make of the vehicle
     */
    make: string;
    /**
     * Model of the vehicle
     */
    model: string;
    /**
     * Year of manufacture
     */
    year: number;
    /**
     * Color of the vehicle
     */
    color: string;
    /**
     * Vehicle Identification Number (VIN)
     */
    vin: string;
    /**
     * Vehicle registration number
     */
    registration_number: string;
    /**
     * Insurance expiry date
     */
    insurance_expiry?: string | null;
    /**
     * Whether the vehicle is available for use
     */
    is_available?: boolean;
    /**
     * Unique identifier for the vehicle
     */
    id: string;
    /**
     * Current mileage of the vehicle
     */
    mileage: number;
    /**
     * Date of last service
     */
    last_service_date?: string | null;
};

export type GetVehiclesV1ApiV1VehiclesGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/vehicles';
};

export type GetVehiclesV1ApiV1VehiclesGetResponses = {
    /**
     * Successful Response
     */
    200: Array<VehicleResponseV1>;
};

export type GetVehiclesV1ApiV1VehiclesGetResponse = GetVehiclesV1ApiV1VehiclesGetResponses[keyof GetVehiclesV1ApiV1VehiclesGetResponses];

export type CreateVehicleV1ApiV1VehiclesPostData = {
    body: CarCreateV1 | TruckCreateV1;
    path?: never;
    query?: never;
    url: '/api/v1/vehicles';
};

export type CreateVehicleV1ApiV1VehiclesPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateVehicleV1ApiV1VehiclesPostError = CreateVehicleV1ApiV1VehiclesPostErrors[keyof CreateVehicleV1ApiV1VehiclesPostErrors];

export type CreateVehicleV1ApiV1VehiclesPostResponses = {
    /**
     * Successful Response
     */
    200: VehicleResponseV1;
};

export type CreateVehicleV1ApiV1VehiclesPostResponse = CreateVehicleV1ApiV1VehiclesPostResponses[keyof CreateVehicleV1ApiV1VehiclesPostResponses];

export type GetCarsV1ApiV1CarsGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/cars';
};

export type GetCarsV1ApiV1CarsGetResponses = {
    /**
     * Successful Response
     */
    200: Array<CarResponseV1>;
};

export type GetCarsV1ApiV1CarsGetResponse = GetCarsV1ApiV1CarsGetResponses[keyof GetCarsV1ApiV1CarsGetResponses];

export type CreateCarV1ApiV1CarsPostData = {
    body: CarCreateV1;
    path?: never;
    query?: never;
    url: '/api/v1/cars';
};

export type CreateCarV1ApiV1CarsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateCarV1ApiV1CarsPostError = CreateCarV1ApiV1CarsPostErrors[keyof CreateCarV1ApiV1CarsPostErrors];

export type CreateCarV1ApiV1CarsPostResponses = {
    /**
     * Successful Response
     */
    200: CarResponseV1;
};

export type CreateCarV1ApiV1CarsPostResponse = CreateCarV1ApiV1CarsPostResponses[keyof CreateCarV1ApiV1CarsPostResponses];

export type GetTrucksV1ApiV1TrucksGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/trucks';
};

export type GetTrucksV1ApiV1TrucksGetResponses = {
    /**
     * Successful Response
     */
    200: Array<TruckResponseV1>;
};

export type GetTrucksV1ApiV1TrucksGetResponse = GetTrucksV1ApiV1TrucksGetResponses[keyof GetTrucksV1ApiV1TrucksGetResponses];

export type CreateTruckV1ApiV1TrucksPostData = {
    body: TruckCreateV1;
    path?: never;
    query?: never;
    url: '/api/v1/trucks';
};

export type CreateTruckV1ApiV1TrucksPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateTruckV1ApiV1TrucksPostError = CreateTruckV1ApiV1TrucksPostErrors[keyof CreateTruckV1ApiV1TrucksPostErrors];

export type CreateTruckV1ApiV1TrucksPostResponses = {
    /**
     * Successful Response
     */
    200: TruckResponseV1;
};

export type CreateTruckV1ApiV1TrucksPostResponse = CreateTruckV1ApiV1TrucksPostResponses[keyof CreateTruckV1ApiV1TrucksPostResponses];

export type GetVehiclesV2ApiV2VehiclesGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v2/vehicles';
};

export type GetVehiclesV2ApiV2VehiclesGetResponses = {
    /**
     * Successful Response
     */
    200: Array<VehicleResponseV2>;
};

export type GetVehiclesV2ApiV2VehiclesGetResponse = GetVehiclesV2ApiV2VehiclesGetResponses[keyof GetVehiclesV2ApiV2VehiclesGetResponses];

export type CreateVehicleV2ApiV2VehiclesPostData = {
    body: CarCreateV2 | TruckCreateV2;
    path?: never;
    query?: never;
    url: '/api/v2/vehicles';
};

export type CreateVehicleV2ApiV2VehiclesPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateVehicleV2ApiV2VehiclesPostError = CreateVehicleV2ApiV2VehiclesPostErrors[keyof CreateVehicleV2ApiV2VehiclesPostErrors];

export type CreateVehicleV2ApiV2VehiclesPostResponses = {
    /**
     * Successful Response
     */
    200: VehicleResponseV2;
};

export type CreateVehicleV2ApiV2VehiclesPostResponse = CreateVehicleV2ApiV2VehiclesPostResponses[keyof CreateVehicleV2ApiV2VehiclesPostResponses];

export type GetCarsV2ApiV2CarsGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v2/cars';
};

export type GetCarsV2ApiV2CarsGetResponses = {
    /**
     * Successful Response
     */
    200: Array<CarResponseV2>;
};

export type GetCarsV2ApiV2CarsGetResponse = GetCarsV2ApiV2CarsGetResponses[keyof GetCarsV2ApiV2CarsGetResponses];

export type CreateCarV2ApiV2CarsPostData = {
    body: CarCreateV2;
    path?: never;
    query?: never;
    url: '/api/v2/cars';
};

export type CreateCarV2ApiV2CarsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateCarV2ApiV2CarsPostError = CreateCarV2ApiV2CarsPostErrors[keyof CreateCarV2ApiV2CarsPostErrors];

export type CreateCarV2ApiV2CarsPostResponses = {
    /**
     * Successful Response
     */
    200: CarResponseV2;
};

export type CreateCarV2ApiV2CarsPostResponse = CreateCarV2ApiV2CarsPostResponses[keyof CreateCarV2ApiV2CarsPostResponses];

export type GetTrucksV2ApiV2TrucksGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v2/trucks';
};

export type GetTrucksV2ApiV2TrucksGetResponses = {
    /**
     * Successful Response
     */
    200: Array<TruckResponseV2>;
};

export type GetTrucksV2ApiV2TrucksGetResponse = GetTrucksV2ApiV2TrucksGetResponses[keyof GetTrucksV2ApiV2TrucksGetResponses];

export type CreateTruckV2ApiV2TrucksPostData = {
    body: TruckCreateV2;
    path?: never;
    query?: never;
    url: '/api/v2/trucks';
};

export type CreateTruckV2ApiV2TrucksPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateTruckV2ApiV2TrucksPostError = CreateTruckV2ApiV2TrucksPostErrors[keyof CreateTruckV2ApiV2TrucksPostErrors];

export type CreateTruckV2ApiV2TrucksPostResponses = {
    /**
     * Successful Response
     */
    200: TruckResponseV2;
};

export type CreateTruckV2ApiV2TrucksPostResponse = CreateTruckV2ApiV2TrucksPostResponses[keyof CreateTruckV2ApiV2TrucksPostResponses];

export type ClientOptions = {
    baseUrl: `${string}://${string}` | (string & {});
};